    private static final int PORT = 8080;
    private static PublicKey clientPublicKey;
    private static KeyPair serverKeyPair;

    static {
        Security.addProvider(new BouncyCastleProvider());
    }

  public static void main(String[] args) throws Exception {
        serverKeyPair = CryptoUtils.generateKeyPair();

        try (ServerSocket serverSocket = new ServerSocket(PORT)) {
            System.out.println("Server starting up...");
            System.out.println("Awaiting client connections...");

            while (true) {
                try (Socket clientSocket = serverSocket.accept()) {
                    System.out.println("Client connected! Initiating handshake...");
                    handleClient(clientSocket);
                }
            }
        }
    }
private static void handleClient(Socket clientSocket) throws Exception {
        BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
        PrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true);
        BufferedReader consoleIn = new BufferedReader(new InputStreamReader(System.in));
